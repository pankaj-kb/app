{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  class: \"h-5 w-5\",\n  fill: \"none\",\n  viewBox: \"0 0 24 24\",\n  stroke: \"currentColor\"\n}, [/*#__PURE__*/_createElementVNode(\"path\", {\n  \"stroke-linecap\": \"round\",\n  \"stroke-linejoin\": \"round\",\n  \"stroke-width\": \"2\",\n  d: \"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\"\n})], -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"p-8 text-gray-500 text-center\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode($setup[\"TweetSearch\"], {\n    placeholder: \"public key\",\n    disabled: !$setup.author,\n    modelValue: $setup.author,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.author = $event),\n    onSearch: $setup.search\n  }, {\n    icon: _withCtx(() => [_hoisted_1]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"disabled\", \"modelValue\"]), $setup.viewedAuthor ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode($setup[\"TweetList\"], {\n    tweets: $setup.tweets,\n    loading: $setup.loading\n  }, null, 8\n  /* PROPS */\n  , [\"tweets\", \"loading\"]), $setup.tweets.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \" User not found... \")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"sources":["/home/magma/solana-twitter/app/src/components/PageUsers.vue"],"names":[],"mappings":";;gCAgDY,mBAAA,CAEM,KAFN,EAEM;AAFD,EAAA,KAAK,EAAC,4BAEL;AAFkC,EAAA,KAAK,EAAC,SAExC;AAFkD,EAAA,IAAI,EAAC,MAEvD;AAF8D,EAAA,OAAO,EAAC,WAEtE;AAFkF,EAAA,MAAM,EAAC;AAEzF,CAFN,E,cACI,mBAAA,CAAuM,MAAvM,EAAuM;AAAjM,oBAAe,OAAkL;AAA1K,qBAAgB,OAA0J;AAAlJ,kBAAa,GAAqI;AAAjI,EAAA,CAAC,EAAC;AAA+H,CAAvM,C,CADJ,E;;AAAA,C;;;;;;;AAO4B,EAAA,KAAK,EAAC;;;6DAT1C,YAAA,CAMe,MAAA,CAAA,aAAA,CANf,EAMe;AAND,IAAA,WAAW,EAAC,YAMX;AANyB,IAAA,QAAQ,EAAA,CAAI,MAAA,CAAA,MAMrC;gBANsD,MAAA,CAAA,MAMtD;+DANsD,MAAA,CAAA,M,GAAM,M,CAM5D;AAN+D,IAAA,QAAM,EAAE,MAAA,CAAA;AAMvE,GANf,E;AACe,IAAA,IAAI,EAAA,QAAA,CACX,MAEM,CAFN,UAEM,CAHK,C;;;;GADnB,E;;AAAA,I,0BAAA,C,EAOW,MAAA,CAAA,Y,kBAAX,mBAAA,CAKM,KALN,EAKM,UALN,EAKM,CAJF,YAAA,CAA6D,MAAA,CAAA,WAAA,CAA7D,EAA6D;AAAhD,IAAA,MAAM,EAAE,MAAA,CAAA,MAAwC;AAA/B,IAAA,OAAO,EAAE,MAAA,CAAA;AAAsB,GAA7D,E,IAAA,E;;AAAA,I,qBAAA,CAIE,EAHS,MAAA,CAAA,MAAA,CAAO,MAAP,KAAa,C,kBAAxB,mBAAA,CAEM,KAFN,EAAA,UAAA,EAAsE,qBAAtE,C,qCAGE,CALN,C","sourcesContent":["<script setup>\nimport { ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { fetchTweets, authorFilter } from '@/api'\nimport { useFromRoute, useWorkspace } from '@/composables'\nimport TweetList from '@/components/TweetList'\nimport TweetSearch from '@/components/TweetSearch'\n\n// Data.\nconst router = useRouter()\nconst tweets = ref([])\nconst loading = ref(true)\nconst author = ref('')\nconst viewedAuthor = ref('')\nconst workspace = useWorkspace()\n\n// Actions.\nconst search = () => {\n    router.push(`/users/${author.value}`)\n}\n\nconst fetchAuthorTweets = async () => {\n    if (author.value === viewedAuthor.value) return\n    try {\n        loading.value = true\n        const fetchedTweets = await fetchTweets()\n        tweets.value = fetchedTweets\n        viewedAuthor.value = author.value\n    } finally {\n        loading.value = false\n    }\n}\n\n// Router hooks.\nuseFromRoute((route) => {\n    author.value = route.params.author\n    if (author.value) {\n        fetchAuthorTweets()\n    } else {\n        tweets.value = []\n        viewedAuthor.value = ''\n    }\n})\n</script>\n\n<template>\n    <tweet-search placeholder=\"public key\" :disabled=\"! author\" v-model=\"author\" @search=\"search\">\n        <template #icon>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\" />\n            </svg>\n        </template>\n    </tweet-search>\n    <div v-if=\"viewedAuthor\">\n        <tweet-list :tweets=\"tweets\" :loading=\"loading\"></tweet-list>\n        <div v-if=\"tweets.length === 0\" class=\"p-8 text-gray-500 text-center\">\n            User not found...\n        </div>\n    </div>\n</template>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}