{"ast":null,"code":"import { inject, provide, computed } from 'vue';\nimport { useAnchorWallet } from '@solana/wallet-adapter-vue';\nimport { Connection, PublicKey } from '@solana/web3.js';\nimport { Provider, Program } from '@project-serum/anchor';\nimport idl from '@/idl/solana_twitter.json';\nconst clusterUrl = process.env.devnet.VUE_APP_CLUSTER_URL;\nconst preflightCommitment = 'processed';\nconst commitment = 'processed';\nconst programID = new PublicKey(idl.metadata.address);\nconst workspaceSymbol = Symbol();\nexport const useWorkspace = () => inject(workspaceSymbol);\nexport const initWorkspace = () => {\n  const wallet = useAnchorWallet();\n  const connection = new Connection(clusterUrl, commitment);\n  const provider = computed(() => new Provider(connection, wallet.value, {\n    preflightCommitment,\n    commitment\n  }));\n  const program = computed(() => new Program(idl, programID, provider.value));\n  provide(workspaceSymbol, {\n    wallet,\n    connection,\n    provider,\n    program\n  });\n};","map":{"version":3,"sources":["/home/magma/solana-twitter/app/src/composables/useWorkspace.js"],"names":["inject","provide","computed","useAnchorWallet","Connection","PublicKey","Provider","Program","idl","clusterUrl","process","env","devnet","VUE_APP_CLUSTER_URL","preflightCommitment","commitment","programID","metadata","address","workspaceSymbol","Symbol","useWorkspace","initWorkspace","wallet","connection","provider","value","program"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,OAAjB,EAA0BC,QAA1B,QAA0C,KAA1C;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,iBAAtC;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,uBAAlC;AACA,OAAOC,GAAP,MAAgB,2BAAhB;AAEA,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,MAAZ,CAAmBC,mBAAtC;AACA,MAAMC,mBAAmB,GAAG,WAA5B;AACA,MAAMC,UAAU,GAAG,WAAnB;AACA,MAAMC,SAAS,GAAG,IAAIX,SAAJ,CAAcG,GAAG,CAACS,QAAJ,CAAaC,OAA3B,CAAlB;AACA,MAAMC,eAAe,GAAGC,MAAM,EAA9B;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAMrB,MAAM,CAACmB,eAAD,CAAjC;AAEP,OAAO,MAAMG,aAAa,GAAG,MAAM;AAC/B,QAAMC,MAAM,GAAGpB,eAAe,EAA9B;AACA,QAAMqB,UAAU,GAAG,IAAIpB,UAAJ,CAAeK,UAAf,EAA2BM,UAA3B,CAAnB;AACA,QAAMU,QAAQ,GAAGvB,QAAQ,CAAC,MAAM,IAAII,QAAJ,CAAakB,UAAb,EAAyBD,MAAM,CAACG,KAAhC,EAAuC;AAAEZ,IAAAA,mBAAF;AAAuBC,IAAAA;AAAvB,GAAvC,CAAP,CAAzB;AACA,QAAMY,OAAO,GAAGzB,QAAQ,CAAC,MAAM,IAAIK,OAAJ,CAAYC,GAAZ,EAAiBQ,SAAjB,EAA4BS,QAAQ,CAACC,KAArC,CAAP,CAAxB;AAEAzB,EAAAA,OAAO,CAACkB,eAAD,EAAkB;AACrBI,IAAAA,MADqB;AAErBC,IAAAA,UAFqB;AAGrBC,IAAAA,QAHqB;AAIrBE,IAAAA;AAJqB,GAAlB,CAAP;AAMH,CAZM","sourcesContent":["import { inject, provide, computed } from 'vue'\nimport { useAnchorWallet } from '@solana/wallet-adapter-vue'\nimport { Connection, PublicKey } from '@solana/web3.js'\nimport { Provider, Program } from '@project-serum/anchor'\nimport idl from '@/idl/solana_twitter.json'\n\nconst clusterUrl = process.env.devnet.VUE_APP_CLUSTER_URL\nconst preflightCommitment = 'processed'\nconst commitment = 'processed'\nconst programID = new PublicKey(idl.metadata.address)\nconst workspaceSymbol = Symbol()\n\nexport const useWorkspace = () => inject(workspaceSymbol)\n\nexport const initWorkspace = () => {\n    const wallet = useAnchorWallet()\n    const connection = new Connection(clusterUrl, commitment)\n    const provider = computed(() => new Provider(connection, wallet.value, { preflightCommitment, commitment }))\n    const program = computed(() => new Program(idl, programID, provider.value))\n\n    provide(workspaceSymbol, {\n        wallet,\n        connection,\n        provider,\n        program,\n    })\n}"]},"metadata":{},"sourceType":"module"}