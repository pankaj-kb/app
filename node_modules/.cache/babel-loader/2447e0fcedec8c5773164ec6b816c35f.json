{"ast":null,"code":"import { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { fetchTweets, topicFilter } from '@/api';\nimport { useSlug, useFromRoute, useWorkspace } from '@/composables';\nimport TweetForm from '@/components/TweetForm';\nimport TweetList from '@/components/TweetList';\nimport TweetSearch from '@/components/TweetSearch'; // Data.\n\nexport default {\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const router = useRouter();\n    const tweets = ref([]);\n    const loading = ref(true);\n    const topic = ref('');\n    const slugTopic = useSlug(topic);\n    const viewedTopic = ref('');\n    const workspace = useWorkspace(); // Actions.\n\n    const search = () => {\n      router.push(`/topics/${slugTopic.value}`);\n    };\n\n    const fetchTopicTweets = async () => {\n      if (slugTopic.value === viewedTopic.value) return;\n\n      try {\n        loading.value = true;\n        const fetchedTweets = await fetchTweets();\n        tweets.value = fetchedTweets;\n        viewedTopic.value = slugTopic.value;\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    const addTweet = tweet => tweets.value.push(tweet); // Router hooks.\n\n\n    useFromRoute(route => {\n      topic.value = route.params.topic;\n\n      if (topic.value) {\n        fetchTopicTweets();\n      } else {\n        tweets.value = [];\n        viewedTopic.value = '';\n      }\n    });\n    const __returned__ = {\n      router,\n      tweets,\n      loading,\n      topic,\n      slugTopic,\n      viewedTopic,\n      workspace,\n      search,\n      fetchTopicTweets,\n      addTweet,\n      ref,\n      useRouter,\n      fetchTweets,\n      topicFilter,\n      useSlug,\n      useFromRoute,\n      useWorkspace,\n      TweetForm,\n      TweetList,\n      TweetSearch\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"sources":["/home/magma/solana-twitter/app/src/components/PageTopics.vue"],"names":[],"mappings":"AACA,SAAS,GAAT,QAAoB,KAApB;AACA,SAAS,SAAT,QAA0B,YAA1B;AACA,SAAS,WAAT,EAAsB,WAAtB,QAAyC,OAAzC;AACA,SAAS,OAAT,EAAkB,YAAlB,EAAgC,YAAhC,QAAoD,eAApD;AACA,OAAO,SAAP,MAAsB,wBAAtB;AACA,OAAO,SAAP,MAAsB,wBAAtB;AACA,OAAO,WAAP,MAAwB,0BAAxB,C,CAEA;;;;;;;AACA,UAAM,MAAM,GAAG,SAAS,EAAxB;AACA,UAAM,MAAM,GAAG,GAAG,CAAC,EAAD,CAAlB;AACA,UAAM,OAAO,GAAG,GAAG,CAAC,IAAD,CAAnB;AACA,UAAM,KAAK,GAAG,GAAG,CAAC,EAAD,CAAjB;AACA,UAAM,SAAS,GAAG,OAAO,CAAC,KAAD,CAAzB;AACA,UAAM,WAAW,GAAG,GAAG,CAAC,EAAD,CAAvB;AACA,UAAM,SAAS,GAAG,YAAY,EAA9B,C,CAEA;;AACA,UAAM,MAAM,GAAG,MAAM;AACjB,MAAA,MAAM,CAAC,IAAP,CAAa,WAAU,SAAS,CAAC,KAAM,EAAvC;AACH,KAFD;;AAIA,UAAM,gBAAgB,GAAG,YAAY;AACjC,UAAI,SAAS,CAAC,KAAV,KAAoB,WAAW,CAAC,KAApC,EAA2C;;AAC3C,UAAI;AACA,QAAA,OAAO,CAAC,KAAR,GAAgB,IAAhB;AACA,cAAM,aAAa,GAAG,MAAM,WAAW,EAAvC;AACA,QAAA,MAAM,CAAC,KAAP,GAAe,aAAf;AACA,QAAA,WAAW,CAAC,KAAZ,GAAoB,SAAS,CAAC,KAA9B;AACH,OALD,SAKU;AACN,QAAA,OAAO,CAAC,KAAR,GAAgB,KAAhB;AACH;AACJ,KAVD;;AAYA,UAAM,QAAQ,GAAG,KAAK,IAAI,MAAM,CAAC,KAAP,CAAa,IAAb,CAAkB,KAAlB,CAA1B,C,CAEA;;;AACA,IAAA,YAAY,CAAE,KAAD,IAAW;AACpB,MAAA,KAAK,CAAC,KAAN,GAAc,KAAK,CAAC,MAAN,CAAa,KAA3B;;AACA,UAAI,KAAK,CAAC,KAAV,EAAiB;AACb,QAAA,gBAAgB;AACnB,OAFD,MAEO;AACH,QAAA,MAAM,CAAC,KAAP,GAAe,EAAf;AACA,QAAA,WAAW,CAAC,KAAZ,GAAoB,EAApB;AACH;AACJ,KARW,CAAZ","sourcesContent":["<script setup>\nimport { ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { fetchTweets, topicFilter } from '@/api'\nimport { useSlug, useFromRoute, useWorkspace } from '@/composables'\nimport TweetForm from '@/components/TweetForm'\nimport TweetList from '@/components/TweetList'\nimport TweetSearch from '@/components/TweetSearch'\n\n// Data.\nconst router = useRouter()\nconst tweets = ref([])\nconst loading = ref(true)\nconst topic = ref('')\nconst slugTopic = useSlug(topic)\nconst viewedTopic = ref('')\nconst workspace = useWorkspace()\n\n// Actions.\nconst search = () => {\n    router.push(`/topics/${slugTopic.value}`)\n}\n\nconst fetchTopicTweets = async () => {\n    if (slugTopic.value === viewedTopic.value) return\n    try {\n        loading.value = true\n        const fetchedTweets = await fetchTweets()\n        tweets.value = fetchedTweets\n        viewedTopic.value = slugTopic.value\n    } finally {\n        loading.value = false\n    }\n}\n\nconst addTweet = tweet => tweets.value.push(tweet)\n\n// Router hooks.\nuseFromRoute((route) => {\n    topic.value = route.params.topic\n    if (topic.value) {\n        fetchTopicTweets()\n    } else {\n        tweets.value = []\n        viewedTopic.value = ''\n    }\n})\n</script>\n\n<template>\n    <tweet-search placeholder=\"topic\" :disabled=\"! slugTopic\" :modelValue=\"slugTopic\" @update:modelValue=\"value => topic = value\" @search=\"search\">\n        <template #icon>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M9.243 3.03a1 1 0 01.727 1.213L9.53 6h2.94l.56-2.243a1 1 0 111.94.486L14.53 6H17a1 1 0 110 2h-2.97l-1 4H15a1 1 0 110 2h-2.47l-.56 2.242a1 1 0 11-1.94-.485L10.47 14H7.53l-.56 2.242a1 1 0 11-1.94-.485L5.47 14H3a1 1 0 110-2h2.97l1-4H5a1 1 0 110-2h2.47l.56-2.243a1 1 0 011.213-.727zM9.03 8l-1 4h2.938l1-4H9.031z\" clip-rule=\"evenodd\" />\n            </svg>  \n        </template>\n    </tweet-search>\n    <div v-if=\"viewedTopic\">\n        <tweet-form @added=\"addTweet\" :forced-topic=\"viewedTopic\"></tweet-form>\n        <tweet-list :tweets=\"tweets\" :loading=\"loading\"></tweet-list>\n        <div v-if=\"tweets.length === 0\" class=\"p-8 text-gray-500 text-center\">\n            No tweets were found in this topic...\n        </div>\n    </div>\n</template>\n"]},"metadata":{},"sourceType":"module"}