{"ast":null,"code":"import { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { fetchTweets, authorFilter } from '@/api';\nimport { useFromRoute, useWorkspace } from '@/composables';\nimport TweetList from '@/components/TweetList';\nimport TweetSearch from '@/components/TweetSearch'; // Data.\n\nexport default {\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const router = useRouter();\n    const tweets = ref([]);\n    const loading = ref(true);\n    const author = ref('');\n    const viewedAuthor = ref('');\n    const workspace = useWorkspace(); // Actions.\n\n    const search = () => {\n      router.push(`/users/${author.value}`);\n    };\n\n    const fetchAuthorTweets = async () => {\n      if (author.value === viewedAuthor.value) return;\n\n      try {\n        loading.value = true;\n        const fetchedTweets = await fetchTweets();\n        tweets.value = fetchedTweets;\n        viewedAuthor.value = author.value;\n      } finally {\n        loading.value = false;\n      }\n    }; // Router hooks.\n\n\n    useFromRoute(route => {\n      author.value = route.params.author;\n\n      if (author.value) {\n        fetchAuthorTweets();\n      } else {\n        tweets.value = [];\n        viewedAuthor.value = '';\n      }\n    });\n    const __returned__ = {\n      router,\n      tweets,\n      loading,\n      author,\n      viewedAuthor,\n      workspace,\n      search,\n      fetchAuthorTweets,\n      ref,\n      useRouter,\n      fetchTweets,\n      authorFilter,\n      useFromRoute,\n      useWorkspace,\n      TweetList,\n      TweetSearch\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"sources":["/home/magma/solana-twitter/app/src/components/PageUsers.vue"],"names":[],"mappings":"AACA,SAAS,GAAT,QAAoB,KAApB;AACA,SAAS,SAAT,QAA0B,YAA1B;AACA,SAAS,WAAT,EAAsB,YAAtB,QAA0C,OAA1C;AACA,SAAS,YAAT,EAAuB,YAAvB,QAA2C,eAA3C;AACA,OAAO,SAAP,MAAsB,wBAAtB;AACA,OAAO,WAAP,MAAwB,0BAAxB,C,CAEA;;;;;;;AACA,UAAM,MAAM,GAAG,SAAS,EAAxB;AACA,UAAM,MAAM,GAAG,GAAG,CAAC,EAAD,CAAlB;AACA,UAAM,OAAO,GAAG,GAAG,CAAC,IAAD,CAAnB;AACA,UAAM,MAAM,GAAG,GAAG,CAAC,EAAD,CAAlB;AACA,UAAM,YAAY,GAAG,GAAG,CAAC,EAAD,CAAxB;AACA,UAAM,SAAS,GAAG,YAAY,EAA9B,C,CAEA;;AACA,UAAM,MAAM,GAAG,MAAM;AACjB,MAAA,MAAM,CAAC,IAAP,CAAa,UAAS,MAAM,CAAC,KAAM,EAAnC;AACH,KAFD;;AAIA,UAAM,iBAAiB,GAAG,YAAY;AAClC,UAAI,MAAM,CAAC,KAAP,KAAiB,YAAY,CAAC,KAAlC,EAAyC;;AACzC,UAAI;AACA,QAAA,OAAO,CAAC,KAAR,GAAgB,IAAhB;AACA,cAAM,aAAa,GAAG,MAAM,WAAW,EAAvC;AACA,QAAA,MAAM,CAAC,KAAP,GAAe,aAAf;AACA,QAAA,YAAY,CAAC,KAAb,GAAqB,MAAM,CAAC,KAA5B;AACH,OALD,SAKU;AACN,QAAA,OAAO,CAAC,KAAR,GAAgB,KAAhB;AACH;AACJ,KAVD,C,CAYA;;;AACA,IAAA,YAAY,CAAE,KAAD,IAAW;AACpB,MAAA,MAAM,CAAC,KAAP,GAAe,KAAK,CAAC,MAAN,CAAa,MAA5B;;AACA,UAAI,MAAM,CAAC,KAAX,EAAkB;AACd,QAAA,iBAAiB;AACpB,OAFD,MAEO;AACH,QAAA,MAAM,CAAC,KAAP,GAAe,EAAf;AACA,QAAA,YAAY,CAAC,KAAb,GAAqB,EAArB;AACH;AACJ,KARW,CAAZ","sourcesContent":["<script setup>\nimport { ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { fetchTweets, authorFilter } from '@/api'\nimport { useFromRoute, useWorkspace } from '@/composables'\nimport TweetList from '@/components/TweetList'\nimport TweetSearch from '@/components/TweetSearch'\n\n// Data.\nconst router = useRouter()\nconst tweets = ref([])\nconst loading = ref(true)\nconst author = ref('')\nconst viewedAuthor = ref('')\nconst workspace = useWorkspace()\n\n// Actions.\nconst search = () => {\n    router.push(`/users/${author.value}`)\n}\n\nconst fetchAuthorTweets = async () => {\n    if (author.value === viewedAuthor.value) return\n    try {\n        loading.value = true\n        const fetchedTweets = await fetchTweets()\n        tweets.value = fetchedTweets\n        viewedAuthor.value = author.value\n    } finally {\n        loading.value = false\n    }\n}\n\n// Router hooks.\nuseFromRoute((route) => {\n    author.value = route.params.author\n    if (author.value) {\n        fetchAuthorTweets()\n    } else {\n        tweets.value = []\n        viewedAuthor.value = ''\n    }\n})\n</script>\n\n<template>\n    <tweet-search placeholder=\"public key\" :disabled=\"! author\" v-model=\"author\" @search=\"search\">\n        <template #icon>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\" />\n            </svg>\n        </template>\n    </tweet-search>\n    <div v-if=\"viewedAuthor\">\n        <tweet-list :tweets=\"tweets\" :loading=\"loading\"></tweet-list>\n        <div v-if=\"tweets.length === 0\" class=\"p-8 text-gray-500 text-center\">\n            User not found...\n        </div>\n    </div>\n</template>\n"]},"metadata":{},"sourceType":"module"}