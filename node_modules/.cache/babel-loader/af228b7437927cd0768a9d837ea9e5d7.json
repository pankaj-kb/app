{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"px-8 py-4\"\n};\nconst _hoisted_2 = [\"title\"];\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"text-gray-500\"\n}, \" • \", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = [\"title\"];\nconst _hoisted_5 = [\"textContent\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createElementVNode(\"h3\", {\n    class: \"inline font-semibold\",\n    title: $setup.tweet.author\n  }, [_createCommentVNode(\" TODO: Link to author page or the profile page if it's our own tweet. \"), _createVNode(_component_router_link, {\n    to: {\n      name: 'Home'\n    },\n    class: \"hover:underline\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.tweet.author_display), 1\n    /* TEXT */\n    )]),\n    _: 1\n    /* STABLE */\n\n  })], 8\n  /* PROPS */\n  , _hoisted_2), _hoisted_3, _createElementVNode(\"time\", {\n    class: \"text-gray-500 text-sm\",\n    title: $setup.tweet.created_at\n  }, [_createCommentVNode(\" TODO: Link to the tweet page. \"), _createVNode(_component_router_link, {\n    to: {\n      name: 'Home'\n    },\n    class: \"hover:underline\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.tweet.created_ago), 1\n    /* TEXT */\n    )]),\n    _: 1\n    /* STABLE */\n\n  })], 8\n  /* PROPS */\n  , _hoisted_4)]), _createElementVNode(\"p\", {\n    class: \"whitespace-pre-wrap\",\n    textContent: _toDisplayString($setup.tweet.content)\n  }, null, 8\n  /* PROPS */\n  , _hoisted_5), _createCommentVNode(\" TODO: Link to the topic page. \"), $setup.tweet.topic ? (_openBlock(), _createBlock(_component_router_link, {\n    key: 0,\n    to: {\n      name: 'Home'\n    },\n    class: \"inline-block mt-2 text-pink-500 hover:underline\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" #\" + _toDisplayString($setup.tweet.topic), 1\n    /* TEXT */\n    )]),\n    _: 1\n    /* STABLE */\n\n  })) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"sources":["/home/magma/solana-twitter/app/src/components/TweetCard.vue"],"names":[],"mappings":";;AAoBS,EAAA,KAAK,EAAC;;;;gCAQH,mBAAA,CAAsC,MAAtC,EAAsC;AAAhC,EAAA,KAAK,EAAC;AAA0B,CAAtC,EAA4B,KAA5B,EAA+B,CAAA;AAAA;AAA/B,C;;;;;;;uBARR,mBAAA,CAqBM,KArBN,EAAA,UAAA,EAqBM,CApBF,mBAAA,CAcM,KAdN,EAcM,IAdN,EAcM,CAbF,mBAAA,CAKK,IALL,EAKK;AALD,IAAA,KAAK,EAAC,sBAKL;AAL6B,IAAA,KAAK,EAAE,MAAA,CAAA,KAAA,CAAM;AAK1C,GALL,E,CACI,mBAAA,CAAA,wEAAA,C,EACA,YAAA,CAEc,sBAFd,EAEc;AAFA,IAAA,EAAE,EAAE;AAAA,MAAA,IAAA,EAAA;AAAA,KAEJ;AAFsB,IAAA,KAAK,EAAC;AAE5B,GAFd,E;sBACI,MAA0B,C,kCAAvB,MAAA,CAAA,KAAA,CAAM,c,GAAc;AAAA;KAAG,C;;;;GAD9B,C,CAFJ,E;;AAAA,I,UAAA,CAaE,EAPF,UAOE,EANF,mBAAA,CAKO,MALP,EAKO;AALD,IAAA,KAAK,EAAC,uBAKL;AAL8B,IAAA,KAAK,EAAE,MAAA,CAAA,KAAA,CAAM;AAK3C,GALP,E,CACI,mBAAA,CAAA,iCAAA,C,EACA,YAAA,CAEc,sBAFd,EAEc;AAFA,IAAA,EAAE,EAAE;AAAA,MAAA,IAAA,EAAA;AAAA,KAEJ;AAFsB,IAAA,KAAK,EAAC;AAE5B,GAFd,E;sBACI,MAAuB,C,kCAApB,MAAA,CAAA,KAAA,CAAM,W,GAAW;AAAA;KAAG,C;;;;GAD3B,C,CAFJ,E;;AAAA,I,UAAA,CAME,CAdN,CAoBE,EALF,mBAAA,CAA0D,GAA1D,EAA0D;AAAvD,IAAA,KAAK,EAAC,qBAAiD;iBAA3B,gBAAA,CAAsB,MAAA,CAAT,KAAS,CAAR,OAAd;AAA2B,GAA1D,E,IAAA,E;;AAAA,I,UAAA,CAKE,EAJF,mBAAA,CAAA,iCAAA,CAIE,EAHiB,MAAA,CAAA,KAAA,CAAM,K,kBAAzB,YAAA,CAEc,sBAFd,EAEc;UAAA;AAFmB,IAAA,EAAE,EAAE;AAAA,MAAA,IAAA,EAAA;AAAA,KAEvB;AAFyC,IAAA,KAAK,EAAC;AAE/C,GAFd,E;sBAA+G,MAC1G,C,iBAD0G,OAC1G,gBAAA,CAAG,MAAA,CAAA,KAAA,CAAM,KAAT,C,EAAc;AAAA;KAAd,C;;;;GADL,C,qCAGE,CArBN,C","sourcesContent":["<script setup>\nimport { toRefs, computed } from 'vue'\nimport { useWorkspace } from '@/composables'\n\nconst props = defineProps({\n    tweet: Object,\n})\n\nconst { tweet } = toRefs(props)\nconst { wallet } = useWorkspace()\nconst authorRoute = computed(() => {\n    if (wallet.value && wallet.value.publicKey.toBase58() === tweet.value.author.toBase58()) {\n        return { name: 'Profile' }\n    } else {\n        return { name: 'Users', params: { author: tweet.value.author.toBase58() } }\n    }\n})\n</script>\n\n<template>\n    <div class=\"px-8 py-4\">\n        <div>\n            <h3 class=\"inline font-semibold\" :title=\"tweet.author\">\n                <!-- TODO: Link to author page or the profile page if it's our own tweet. -->\n                <router-link :to=\"{ name: 'Home' }\" class=\"hover:underline\">\n                    {{ tweet.author_display }}\n                </router-link>\n            </h3>\n            <span class=\"text-gray-500\"> • </span>\n            <time class=\"text-gray-500 text-sm\" :title=\"tweet.created_at\">\n                <!-- TODO: Link to the tweet page. -->\n                <router-link :to=\"{ name: 'Home' }\" class=\"hover:underline\">\n                    {{ tweet.created_ago }}\n                </router-link>\n            </time>\n        </div>\n        <p class=\"whitespace-pre-wrap\" v-text=\"tweet.content\"></p>\n        <!-- TODO: Link to the topic page. -->\n        <router-link v-if=\"tweet.topic\" :to=\"{ name: 'Home' }\" class=\"inline-block mt-2 text-pink-500 hover:underline\">\n            #{{ tweet.topic }}\n        </router-link>\n    </div>\n</template>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}