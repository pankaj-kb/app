{"ast":null,"code":"import { unref as _unref, withKeys as _withKeys, createElementVNode as _createElementVNode, renderSlot as _renderSlot, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"relative border-b\"\n};\nconst _hoisted_2 = [\"placeholder\", \"value\"];\nconst _hoisted_3 = {\n  class: \"absolute right-0 inset-y-0 flex items-center pr-8\"\n};\nconst _hoisted_4 = [\"disabled\"];\nimport { toRefs } from 'vue';\nexport default {\n  props: {\n    modelValue: String,\n    placeholder: String,\n    disabled: Boolean\n  },\n  emits: ['search', 'update:modelValue'],\n\n  setup(__props, {\n    emit\n  }) {\n    const props = __props;\n    const {\n      modelValue,\n      placeholder,\n      disabled\n    } = toRefs(props);\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"input\", {\n        type: \"text\",\n        class: \"text-gray-700 w-full pl-16 pr-32 py-4 bg-gray-50\",\n        placeholder: _unref(placeholder),\n        value: _unref(modelValue),\n        onInput: _cache[0] || (_cache[0] = $event => emit('update:modelValue', $event.target.value)),\n        onKeydown: _cache[1] || (_cache[1] = _withKeys($event => emit('search'), [\"enter\"]))\n      }, null, 40, _hoisted_2), _createElementVNode(\"div\", {\n        class: _normalizeClass([\"absolute left-0 inset-y-0 flex items-center justify-center pl-8 pr-2\", _unref(modelValue) ? 'text-gray-700' : 'text-gray-400'])\n      }, [_renderSlot(_ctx.$slots, \"icon\")], 2), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n        class: _normalizeClass([\"rounded-full px-4 py-1 font-semibold\", !_unref(disabled) ? 'text-gray-700 bg-gray-300 hover:bg-gray-400 hover:text-white' : 'text-gray-400 bg-gray-200 cursor-not-allowed']),\n        disabled: _unref(disabled),\n        onClick: _cache[2] || (_cache[2] = $event => emit('search'))\n      }, \" Search \", 10, _hoisted_4)])]);\n    };\n  }\n\n};","map":{"version":3,"sources":["/home/magma/solana-twitter/app/src/components/TweetSearch.vue"],"names":[],"mappings":";;;;;;;;;AACA,SAAS,MAAT,QAAuB,KAAvB;;;;;;;;;;;;;AASA,UAAM;AAAE,MAAA,UAAF;AAAc,MAAA,WAAd;AAA2B,MAAA;AAA3B,QAAwC,MAAM,CAAC,KAAD,CAApD","sourcesContent":["<script setup>\nimport { toRefs } from 'vue'\n\nconst emit = defineEmits(['search', 'update:modelValue'])\nconst props = defineProps({\n    modelValue: String,\n    placeholder: String,\n    disabled: Boolean,\n})\n\nconst { modelValue, placeholder, disabled } = toRefs(props)\n</script>\n\n<template>\n    <div class=\"relative border-b\">\n        <input\n            type=\"text\"\n            class=\"text-gray-700 w-full pl-16 pr-32 py-4 bg-gray-50\"\n            :placeholder=\"placeholder\"\n            :value=\"modelValue\"\n            @input=\"emit('update:modelValue', $event.target.value)\"\n            @keydown.enter=\"emit('search')\"\n        >\n        <div class=\"absolute left-0 inset-y-0 flex items-center justify-center pl-8 pr-2\" :class=\"modelValue ? 'text-gray-700' : 'text-gray-400'\">\n            <slot name=\"icon\"></slot>\n        </div>\n        <div class=\"absolute right-0 inset-y-0 flex items-center pr-8\">\n            <button\n                class=\"rounded-full px-4 py-1  font-semibold\"\n                :class=\"! disabled ? 'text-gray-700 bg-gray-300 hover:bg-gray-400 hover:text-white' : 'text-gray-400 bg-gray-200 cursor-not-allowed'\"\n                :disabled=\"disabled\"\n                @click=\"emit('search')\"\n            >\n                Search\n            </button>\n        </div>\n    </div>\n</template>\n"]},"metadata":{},"sourceType":"module"}